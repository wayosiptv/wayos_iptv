package com.wayos_iptv.lzw.functions.database.greenDao.db;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import zxch.com.androdivoidetest.sql.LiveNameChange;
import zxch.com.androdivoidetest.sql.LiveName;
import zxch.com.androdivoidetest.sql.LiveLink;

import com.wayos_iptv.lzw.functions.database.greenDao.db.LiveNameChangeDao;
import com.wayos_iptv.lzw.functions.database.greenDao.db.LiveNameDao;
import com.wayos_iptv.lzw.functions.database.greenDao.db.LiveLinkDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig liveNameChangeDaoConfig;
    private final DaoConfig liveNameDaoConfig;
    private final DaoConfig liveLinkDaoConfig;

    private final LiveNameChangeDao liveNameChangeDao;
    private final LiveNameDao liveNameDao;
    private final LiveLinkDao liveLinkDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        liveNameChangeDaoConfig = daoConfigMap.get(LiveNameChangeDao.class).clone();
        liveNameChangeDaoConfig.initIdentityScope(type);

        liveNameDaoConfig = daoConfigMap.get(LiveNameDao.class).clone();
        liveNameDaoConfig.initIdentityScope(type);

        liveLinkDaoConfig = daoConfigMap.get(LiveLinkDao.class).clone();
        liveLinkDaoConfig.initIdentityScope(type);

        liveNameChangeDao = new LiveNameChangeDao(liveNameChangeDaoConfig, this);
        liveNameDao = new LiveNameDao(liveNameDaoConfig, this);
        liveLinkDao = new LiveLinkDao(liveLinkDaoConfig, this);

        registerDao(LiveNameChange.class, liveNameChangeDao);
        registerDao(LiveName.class, liveNameDao);
        registerDao(LiveLink.class, liveLinkDao);
    }
    
    public void clear() {
        liveNameChangeDaoConfig.clearIdentityScope();
        liveNameDaoConfig.clearIdentityScope();
        liveLinkDaoConfig.clearIdentityScope();
    }

    public LiveNameChangeDao getLiveNameChangeDao() {
        return liveNameChangeDao;
    }

    public LiveNameDao getLiveNameDao() {
        return liveNameDao;
    }

    public LiveLinkDao getLiveLinkDao() {
        return liveLinkDao;
    }

}
